[   
    
     
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreatePassengerBcbp/CreateBatchBcbp/BlockSeat/UnblockSeat/GetTransactionsBetweenDates",
       "_comment": "Validando respuesta adecuada seatCode, seatLetter y number nulo. Validando respuesta del servicio UnblockSeat para seatId alfabético. Validando respuesta del servicio GetTransactionsBetweenDates para dateTo vacío",
       "index": 17,
       "userName": "QA",
       "terminalId": "1",
       "name": "Test17",
       "lastName": "Asiento nulo",
       "seatCode": null,
       "passengerType": "Pasajero_Mayor",
       "seatLetter": null,
       "countToGenerate": 1,
       "seatComment": "Comment 17",
       "number": null,
       "seatId": "asdf",
       "dateTo": "",
       "messageBcbp":"El código de asiento es nulo",
       "codeBcbp": "2015",
       "messageBatchBcbp": "Letra de asiento nula o vacía",
       "codeBatchBcbp": "2029",
       "messageBlockSeat": "Letra de asiento nula o vacía",
       "codeBlockSeat": "2029",
       "messageUnblockSeat": "El identificador del asiento debe ser un número entero",
       "codeUnblockSeat": "57",
       "messageGetTransactionsBetweenDates": "Rango de fecha nulo o vacío",
       "codeGetTransactionsBetweenDates": "2057"
     },
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreatePassengerBcbp",
       "_comment": "Validando respuesta adecuada seatCode superior a 4 caracteres",
       "index": 18,
       "userName": "QA",
       "terminalId": "1",
       "name": "Test18",
       "lastName": "Asiento superior",
       "seatCode": "12345",
       "passengerType": "Pasajero_Mayor",
       "seatComment": "Comment 18",
       "number": "124",
       "messageBcbp":"Código de asiento excede el largo válido",
       "codeBcbp": "607"
     },
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreateBatchBcbp",
       "_comment": "Validando respuesta adecuada para seatLetter de dos caracteres",
       "index": 19,
       "userName": "QA",
       "terminalId": "1",
       "name": "Test19",
       "lastName": "seatLetter 2 caracteres",
       "passengerType": "Pasajero_Mayor",
       "seatLetter": "ab",
       "countToGenerate": 1,
       "messageBatchBcbp": "Letra de asiento excede el largo válido",
       "codeBatchBcbp": "2001"
     },
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreatePassengerBcbp/GetBlockedSeatByData",
       "_comment": "Validando respuesta adecuada para seatCode alfabético",
       "index": 20,
       "userName": "QA",
       "terminalId": "1",
       "name": "Test20",
       "lastName": "Asiento alfabético",
       "seatCode": "asdf",
       "passengerType": "Pasajero_Mayor",
       "messageBcbp":"El número de asiento es inválido",
       "codeBcbp": "613",
       "messageGetBlockedSeat": "El número de asiento es inválido",
       "codeGetBlockedSeat": "613"
      },
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreatePassengerBcbp/GetBlockedSeatByData",
       "_comment": "Validando respuesta adecuada para seatCode formado por caracteres especiales",
       "index": 21,
       "userName": "QA",
       "terminalId": "1", 
       "name": "Test21",
       "lastName": "Asiento caract",
       "seatCode": "!$%!",
       "passengerType": "Pasajero_Mayor",
       "messageBcbp":"El número de asiento es inválido",
       "codeBcbp": "613",
       "messageGetBlockedSeat": "El número de asiento es inválido",
       "codeGetBlockedSeat": "613"
     },
     {
       "_services": "GetAboutInfo/GetFlightsPocEnabled/CreatePassengerBcbp/CreateBatchBcbp/GetFligthCrew/GetTransactionsByFlight/GetTransactionsByFlightWithoutPhotos/BlockSeat/GetIntelliPocResponses/GetBlockedSeatsByData/GetBlockedSeatByData",
       "_comment": "Validando respuesta adecuada para countToGenerate alfabético, stda nulo y stdaJulOptionalParam nulo. seatCode igual al de un pasajero mayor que no confirma checkin. Este pasajero tampoco confirma checkin",
       "index": 22,
       "userName": "QA",
       "terminalId": "1", 
       "name": "Test22",
       "lastName": "Mismo asiento",
       "seatCode": "123A",
       "passengerType": "Pasajero_Infante",
       "seatLetter": "A",
       "countToGenerate": "a",
       "blockSeat": true,
       "seatComment": "Comment 22",
       "intelliPoc": true,
       "getBlockedSeats": true,
       "getBlockedSeat": true,
       "deleteCrew": false,
       "valid_stdaJulOptionalParam": true,
       "new_stdaJulOptionalParam": null,
       "number": "123",
       "runwayId": "PUESTO_MANUAL_1",
       "onlyBcbpCheck": false,
       "manual": true,
       "confirmTrx": "0",
       "wu": "1",
       "stda": null,
       "getTransactions1": true,
       "getTransactions2": true,
       "messageBcbp":"El BCBP del pasajero se creó con éxito",
       "codeBcbp": "0",
       "messageCrew": "El stda del vuelo es nulo o vacío",
       "codeCrew": "1902",
       "messageBatchBcbp": "La cantidad a generar debe ser un número entero",
       "codeBatchBcbp": "208",  
       "messageIntelli": "El stda del vuelo es nulo o vacío",
       "codeIntelli": "1902",
       "messageBlockSeat": "El stda del vuelo es nulo o vacío",
       "codeBlockSeat": "1902",
       "messageGetBlockedSeats": "La fecha juliana es nula o vacía",
       "codeGetBlockedSeats": "1908",
       "messageGetBlockedSeat": "La fecha juliana es nula o vacía",
       "codeGetBlockedSeat": "1908",
       "messageValidationBCBP": "El BCBP es correcto",
       "codeValidationBCBP":"0",
       "messageCheckin": "Pasajero Infante Permitido Para Embarcar",
       "codeCheckin": "0",
       "messageConfirmEntry": "No se detectó al pasajero o el pasajero no ingresó",
       "codeConfirmEntry": "2",
       "messageGetTransactions1": "El stda del vuelo es nulo o vacío",
       "codeGetTransactions1": "1902",
       "messageGetTransactions2": "El stda del vuelo es nulo o vacío",
       "codeGetTransactions2": "1902"
     }
]